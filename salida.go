package main; 
import ( "fmt");
var heap [100000]float64; 
var stack [100000]float64;
var P, H float64;
var T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,T96,T97,T98,T99,T100,T101,T102,T103,T104,T105,T106,T107,T108,T109,T110,T111,T112,T113,T114,T115,T116,T117,T118,T119,T120,T121,T122,T123,T124,T125,T126,T127,T128,T129,T130,T131,T132,T133,T134,T135,T136,T137,T138,T139,T140,T141,T142,T143,T144,T145,T146,T147,T148,T149,T150,T151,T152,T153,T154,T155,T156,T157,T158,T159,T160,T161,T162,T163,T164,T165,T166,T167,T168,T169,T170,T171,T172,T173,T174,T175,T176,T177,T178,T179,T180,T181,T182,T183,T184,T185,T186,T187,T188,T189,T190,T191,T192,T193,T194,T195,T196,T197,T198,T199,T200,T201,T202,T203,T204,T205,T206,T207,T208,T209,T210,T211,T212,T213,T214,T215,T216,T217,T218,T219,T220 float64;

func printString(){
T0 = 0;
T1 = stack[int(T0)];
L0:
T2 = heap[int(T1)];
if T2 == -1 { goto L1;}
fmt.Printf("%c", int(T2));
T1 = T1 + 1; 
goto L0;
L1: 
return;
}
/* funciones nativas */
func concatNative(){
	T194=H; 
	/* PARAMETRO 1 */
	T195=P+1; 
	T196=stack[int(T195)];
	T197=T196; 
	L132:
	T198=heap[int(T197)];
	if T198==-1 {goto L133;}
	heap[int(H)]=T198;
	T197=T197+1; 
	H = H + 1;
	goto L132;
	L133:
	/* PARAMETRO 2 */
	T199=P+2; 
	T200=stack[int(T199)];
	T201=T200; 
	L134:
	T202=heap[int(T201)];
	if T202==-1 {goto L135;}
	heap[int(H)]=T202;
	T201=T201+1; 
	H = H + 1;
	goto L134;
	L135:
	heap[int(H)]=-1;
	H = H + 1;
	stack[int(P)]=T194;
	return;
}


func main(){
	T3=H; 
	heap[int(H)]=-2;
	H = H + 1;
	heap[int(H)]=8;
	H = H + 1;
	T4=H; 
	heap[int(H)]=1;
	H = H + 1;
	T5=H; 
	H = H + 1;
	T6=H; 
	H = H + 1;
	T7=H; 
	H = H + 1;
	T8=H; 
	H = H + 1;
	T9=H; 
	H = H + 1;
	T10=H; 
	H = H + 1;
	T11=H; 
	H = H + 1;
	T12=H; 
	H = H + 1;
	/* VALORES */
	T13=H; 
	heap[int(T13)]=32.0;
	H = H + 1;
	heap[int(T5)]=T13;
	T14=H; 
	heap[int(T14)]=21.0;
	H = H + 1;
	heap[int(T6)]=T14;
	T15=H; 
	heap[int(T15)]=7.0;
	H = H + 1;
	heap[int(T7)]=T15;
	T16=H; 
	heap[int(T16)]=89.0;
	H = H + 1;
	heap[int(T8)]=T16;
	T17=H; 
	heap[int(T17)]=56.0;
	H = H + 1;
	heap[int(T9)]=T17;
	T18=H; 
	heap[int(T18)]=909.0;
	H = H + 1;
	heap[int(T10)]=T18;
	T19=H; 
	heap[int(T19)]=109.0;
	H = H + 1;
	heap[int(T11)]=T19;
	T20=H; 
	heap[int(T20)]=2.0;
	H = H + 1;
	heap[int(T12)]=T20;
	/* INSERTAR TIPO */
	heap[int(T4)]=1;
	T21=P+1; 
	stack[int(T21)]=T3;
	T22=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T22;
	printString();	fmt.Printf("%c", int(10));
	T23=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T23;
	printString();	fmt.Printf("%c", int(10));
	T24=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T24;
	printString();	fmt.Printf("%c", int(10));
	/* ACCESO ARRAY */
	T25=stack[int(1)];
	T26=0; 
	/* ACCESO POS 4.0  */
	T27=T25; 
	T30=4.0; 
	T28=heap[int(T27)];
	if T28!=-2 {goto L4;}
	T27=T27+1; 
	T28=heap[int(T27)];
	T29=T28; 
	T27=T27+1; 
	if T30>T29 {goto L5;}
	T27=T27+T30; 
	T28=heap[int(T27)];
	T26=heap[int(T28)];
	if T26==-2 {goto L6;}
	goto L3;
	L6:
	T25=T28; 
	goto L3;
	L4:
	fmt.Printf("No es un array");
	goto L3;
	L5:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L3:
	if T26!=-2 {goto L7;}
	T26=T28; 
	L7:
	/* ACCESO ARRAY */
	T31=stack[int(1)];
	T32=0; 
	/* ACCESO POS 4.0  */
	T33=T31; 
	T36=4.0; 
	T34=heap[int(T33)];
	if T34!=-2 {goto L9;}
	T33=T33+1; 
	T34=heap[int(T33)];
	T35=T34; 
	T33=T33+1; 
	if T36>T35 {goto L10;}
	T33=T33+T36; 
	T34=heap[int(T33)];
	T32=heap[int(T34)];
	if T32==-2 {goto L11;}
	goto L8;
	L11:
	T31=T34; 
	goto L8;
	L9:
	fmt.Printf("No es un array");
	goto L8;
	L10:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L8:
	if T32!=-2 {goto L12;}
	T32=T34; 
	L12:
	if T32>50.0 {goto L13;}
	goto L14;
	/* INSTRUCCION IF */
	L13:
	T37=H; 
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T37;
	printString();	fmt.Printf("%c", int(10));
	goto L15;
	L14:
	/* ACCESO ARRAY */
	T38=stack[int(1)];
	T39=0; 
	/* ACCESO POS 4.0  */
	T40=T38; 
	T43=4.0; 
	T41=heap[int(T40)];
	if T41!=-2 {goto L17;}
	T40=T40+1; 
	T41=heap[int(T40)];
	T42=T41; 
	T40=T40+1; 
	if T43>T42 {goto L18;}
	T40=T40+T43; 
	T41=heap[int(T40)];
	T39=heap[int(T41)];
	if T39==-2 {goto L19;}
	goto L16;
	L19:
	T38=T41; 
	goto L16;
	L17:
	fmt.Printf("No es un array");
	goto L16;
	L18:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L16:
	if T39!=-2 {goto L20;}
	T39=T41; 
	L20:
	/* ACCESO ARRAY */
	T44=stack[int(1)];
	T45=0; 
	/* ACCESO POS 4.0  */
	T46=T44; 
	T49=4.0; 
	T47=heap[int(T46)];
	if T47!=-2 {goto L22;}
	T46=T46+1; 
	T47=heap[int(T46)];
	T48=T47; 
	T46=T46+1; 
	if T49>T48 {goto L23;}
	T46=T46+T49; 
	T47=heap[int(T46)];
	T45=heap[int(T47)];
	if T45==-2 {goto L24;}
	goto L21;
	L24:
	T44=T47; 
	goto L21;
	L22:
	fmt.Printf("No es un array");
	goto L21;
	L23:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L21:
	if T45!=-2 {goto L25;}
	T45=T47; 
	L25:
	if T45==56.0 {goto L26;}
	goto L27;
	/* INSTRUCCION IF */
	L26:
	T50=H; 
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T50;
	printString();	fmt.Printf("%c", int(10));
	goto L28;
	L27:
	T51=H; 
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T51;
	printString();	fmt.Printf("%c", int(10));
	L28:
	L15:
	T52=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T52;
	printString();	fmt.Printf("%c", int(10));
	T53=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=115;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=65;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=65;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T53;
	printString();	fmt.Printf("%c", int(10));
	T54=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T54;
	printString();	fmt.Printf("%c", int(10));
	T55=P+2; 
	stack[int(T55)]=10.0;
	/* ACCESO ID */
	T56=stack[int(2)];
	/* ACCESO ID */
	T57=stack[int(2)];
	if T57>0.0 {goto L30;}
	goto L31;
	/* INSTRUCCION IF */
	L30:
	T58=H; 
	heap[int(H)]=80;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=77;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T58;
	printString();	fmt.Printf("%c", int(10));
	/* EXPRESION RELACIONAL */
	goto L35;
	goto L34;
	goto L35;
	goto L34;
	L35:
	/* ACCESO ID */
	T59=stack[int(2)];
	/* ACCESO ID */
	T60=stack[int(2)];
	if T60==1.0 {goto L33;}
	goto L34;
	/* INSTRUCCION IF */
	L33:
	T61=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T61;
	printString();	fmt.Printf("%c", int(10));
	goto L36;
	L34:
	/* ACCESO ID */
	T62=stack[int(2)];
	/* ACCESO ID */
	T63=stack[int(2)];
	if T63>10.0 {goto L37;}
	goto L38;
	/* INSTRUCCION IF */
	L37:
	T64=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T64;
	printString();	fmt.Printf("%c", int(10));
	goto L39;
	L38:
	T65=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T65;
	printString();	fmt.Printf("%c", int(10));
	L39:
	L36:
	goto L32;
	L31:
	/* ACCESO ID */
	T66=stack[int(2)];
	/* ACCESO ID */
	T67=stack[int(2)];
	if T67<=3.0 {goto L40;}
	goto L41;
	/* INSTRUCCION IF */
	L40:
	T68=H; 
	heap[int(H)]=80;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=77;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T68;
	printString();	fmt.Printf("%c", int(10));
	/* EXPRESION RELACIONAL */
	goto L45;
	goto L44;
	goto L45;
	goto L44;
	L45:
	/* ACCESO ID */
	T69=stack[int(2)];
	/* ACCESO ID */
	T70=stack[int(2)];
	if T70==1.0 {goto L43;}
	goto L44;
	/* INSTRUCCION IF */
	L43:
	T71=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T71;
	printString();	fmt.Printf("%c", int(10));
	goto L46;
	L44:
	/* ACCESO ID */
	T72=stack[int(2)];
	/* ACCESO ID */
	T73=stack[int(2)];
	if T73>10.0 {goto L47;}
	goto L48;
	/* INSTRUCCION IF */
	L47:
	T74=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T74;
	printString();	fmt.Printf("%c", int(10));
	goto L49;
	L48:
	T75=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T75;
	printString();	fmt.Printf("%c", int(10));
	L49:
	L46:
	goto L42;
	L41:
	/* ACCESO ID */
	T76=stack[int(2)];
	/* ACCESO ID */
	T77=stack[int(2)];
	/* ACCESO ARRAY */
	T78=stack[int(1)];
	T79=0; 
	/* ACCESO POS 4.0  */
	T80=T78; 
	T83=4.0; 
	T81=heap[int(T80)];
	if T81!=-2 {goto L51;}
	T80=T80+1; 
	T81=heap[int(T80)];
	T82=T81; 
	T80=T80+1; 
	if T83>T82 {goto L52;}
	T80=T80+T83; 
	T81=heap[int(T80)];
	T79=heap[int(T81)];
	if T79==-2 {goto L53;}
	goto L50;
	L53:
	T78=T81; 
	goto L50;
	L51:
	fmt.Printf("No es un array");
	goto L50;
	L52:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L50:
	if T79!=-2 {goto L54;}
	T79=T81; 
	L54:
	/* ACCESO ARRAY */
	T84=stack[int(1)];
	T85=0; 
	/* ACCESO POS 4.0  */
	T86=T84; 
	T89=4.0; 
	T87=heap[int(T86)];
	if T87!=-2 {goto L56;}
	T86=T86+1; 
	T87=heap[int(T86)];
	T88=T87; 
	T86=T86+1; 
	if T89>T88 {goto L57;}
	T86=T86+T89; 
	T87=heap[int(T86)];
	T85=heap[int(T87)];
	if T85==-2 {goto L58;}
	goto L55;
	L58:
	T84=T87; 
	goto L55;
	L56:
	fmt.Printf("No es un array");
	goto L55;
	L57:
	fmt.Printf("%c", int(66));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(117));
	fmt.Printf("%c", int(110));
	fmt.Printf("%c", int(100));
	fmt.Printf("%c", int(115));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	L55:
	if T85!=-2 {goto L59;}
	T85=T87; 
	L59:
	if T77==T85 {goto L60;}
	goto L61;
	/* INSTRUCCION IF */
	L60:
	T90=H; 
	heap[int(H)]=80;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=77;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T90;
	printString();	fmt.Printf("%c", int(10));
	/* EXPRESION RELACIONAL */
	goto L65;
	goto L64;
	goto L65;
	goto L64;
	L65:
	/* ACCESO ID */
	T91=stack[int(2)];
	/* ACCESO ID */
	T92=stack[int(2)];
	if T92==1.0 {goto L63;}
	goto L64;
	/* INSTRUCCION IF */
	L63:
	T93=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T93;
	printString();	fmt.Printf("%c", int(10));
	goto L66;
	L64:
	/* ACCESO ID */
	T94=stack[int(2)];
	/* ACCESO ID */
	T95=stack[int(2)];
	if T95>10.0 {goto L67;}
	goto L68;
	/* INSTRUCCION IF */
	L67:
	T96=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T96;
	printString();	fmt.Printf("%c", int(10));
	goto L69;
	L68:
	T97=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=71;
	H = H + 1;
	heap[int(H)]=85;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=68;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T97;
	printString();	fmt.Printf("%c", int(10));
	L69:
	L66:
	goto L62;
	L61:
	L62:
	L42:
	L32:
	T98=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T98;
	printString();	fmt.Printf("%c", int(10));
	T99=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=87;
	H = H + 1;
	heap[int(H)]=72;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=76;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T99;
	printString();	fmt.Printf("%c", int(10));
	T100=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T100;
	printString();	fmt.Printf("%c", int(10));
	T101=P+3; 
	stack[int(T101)]=0.0;
	/* INSTRUCCION WHILE */
	L71:
	/* ACCESO ID */
	T102=stack[int(3)];
	/* ACCESO ID */
	T103=stack[int(3)];
	if T103>=0.0 {goto L72;}
	goto L73;
	L72:
	/* ACCESO ID */
	T104=stack[int(3)];
	/* ACCESO ID */
	T105=stack[int(3)];
	if T105==0.0 {goto L74;}
	goto L75;
	/* INSTRUCCION IF */
	L74:
	/* ACCESO ID */
	T106=stack[int(3)];
	T107=T106+100.0; 
	stack[int(3)]=T107;
	goto L76;
	L75:
	/* ACCESO ID */
	T108=stack[int(3)];
	/* ACCESO ID */
	T109=stack[int(3)];
	if T109>50.0 {goto L77;}
	goto L78;
	/* INSTRUCCION IF */
	L77:
	/* ACCESO ID */
	T110=stack[int(3)];
	T112=2.0; 
	if T112!=0 {goto L80;}
	fmt.Printf("%c", int(77));
	fmt.Printf("%c", int(97));
	fmt.Printf("%c", int(116));
	fmt.Printf("%c", int(104));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	T111=0; 
	goto L81;
	L80:
	T111=T110/T112; 
	L81:
	T113=T111-25.0; 
	stack[int(3)]=T113;
	goto L79;
	L78:
	/* ACCESO ID */
	T114=stack[int(3)];
	T116=2.0; 
	if T116!=0 {goto L82;}
	fmt.Printf("%c", int(77));
	fmt.Printf("%c", int(97));
	fmt.Printf("%c", int(116));
	fmt.Printf("%c", int(104));
	fmt.Printf("%c", int(69));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(114));
	fmt.Printf("%c", int(111));
	fmt.Printf("%c", int(114));
	T115=0; 
	goto L83;
	L82:
	T115=T114/T116; 
	L83:
	T117=T115-1.0; 
	stack[int(3)]=T117;
	L79:
	L76:
	/* ACCESO ID */
	T118=stack[int(3)];
	/* PRINT */
	fmt.Printf("%f", T118);
	fmt.Printf("%c", int(10));
	goto L71;
	L73:
	T119=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T119;
	printString();	fmt.Printf("%c", int(10));
	T120=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=87;
	H = H + 1;
	heap[int(H)]=72;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=76;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=45;
	H = H + 1;
	heap[int(H)]=50;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T120;
	printString();	fmt.Printf("%c", int(10));
	T121=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T121;
	printString();	fmt.Printf("%c", int(10));
	T122=0.0-2.0; 
	stack[int(3)]=T122;
	/* ACCESO ID */
	T123=stack[int(3)];
	T124=T123+1.0; 
	stack[int(3)]=T124;
	/* INSTRUCCION WHILE */
	L84:
	/* ACCESO ID */
	T125=stack[int(3)];
	/* ACCESO ID */
	T126=stack[int(3)];
	if T126!=12.0 {goto L85;}
	goto L86;
	L85:
	/* ACCESO ID */
	T127=stack[int(3)];
	T128=T127+1.0; 
	stack[int(3)]=T128;
	/* EXPRESION RELACIONAL */
	/* EXPRESION RELACIONAL */
	/* EXPRESION RELACIONAL */
	/* ACCESO ID */
	T129=stack[int(3)];
	/* ACCESO ID */
	T130=stack[int(3)];
	if T130==0.0 {goto L87;}
	goto L94;
	L94:
	/* ACCESO ID */
	T131=stack[int(3)];
	/* ACCESO ID */
	T132=stack[int(3)];
	if T132==1.0 {goto L87;}
	goto L92;
	L92:
	/* ACCESO ID */
	T133=stack[int(3)];
	/* ACCESO ID */
	T134=stack[int(3)];
	if T134==11.0 {goto L87;}
	goto L90;
	L90:
	/* ACCESO ID */
	T135=stack[int(3)];
	/* ACCESO ID */
	T136=stack[int(3)];
	if T136==12.0 {goto L87;}
	goto L88;
	/* INSTRUCCION IF */
	L87:
	T137=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T137;
	printString();	fmt.Printf("%c", int(10));
	goto L95;
	L88:
	/* ACCESO ID */
	T138=stack[int(3)];
	/* ACCESO ID */
	T139=stack[int(3)];
	if T139==2.0 {goto L96;}
	goto L97;
	/* INSTRUCCION IF */
	L96:
	T140=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T140;
	printString();	fmt.Printf("%c", int(10));
	goto L98;
	L97:
	/* EXPRESION RELACIONAL */
	/* ACCESO ID */
	T141=stack[int(3)];
	/* ACCESO ID */
	T142=stack[int(3)];
	if T142>=3.0 {goto L101;}
	goto L100;
	L101:
	/* ACCESO ID */
	T143=stack[int(3)];
	/* ACCESO ID */
	T144=stack[int(3)];
	if T144<=5.0 {goto L99;}
	goto L100;
	/* INSTRUCCION IF */
	L99:
	T145=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T145;
	printString();	fmt.Printf("%c", int(10));
	goto L102;
	L100:
	/* ACCESO ID */
	T146=stack[int(3)];
	/* ACCESO ID */
	T147=stack[int(3)];
	if T147==6.0 {goto L103;}
	goto L104;
	/* INSTRUCCION IF */
	L103:
	T148=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T148;
	printString();	fmt.Printf("%c", int(10));
	goto L105;
	L104:
	/* EXPRESION RELACIONAL */
	/* ACCESO ID */
	T149=stack[int(3)];
	/* ACCESO ID */
	T150=stack[int(3)];
	if T150>=7.0 {goto L108;}
	goto L107;
	L108:
	/* ACCESO ID */
	T151=stack[int(3)];
	/* ACCESO ID */
	T152=stack[int(3)];
	if T152<=9.0 {goto L106;}
	goto L107;
	/* INSTRUCCION IF */
	L106:
	T153=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T153;
	printString();	fmt.Printf("%c", int(10));
	goto L109;
	L107:
	/* ACCESO ID */
	T154=stack[int(3)];
	/* ACCESO ID */
	T155=stack[int(3)];
	if T155==10.0 {goto L110;}
	goto L111;
	/* INSTRUCCION IF */
	L110:
	T156=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T156;
	printString();	fmt.Printf("%c", int(10));
	goto L112;
	L111:
	L112:
	L109:
	L105:
	L102:
	L98:
	L95:
	goto L84;
	L86:
	T157=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T157;
	printString();	fmt.Printf("%c", int(10));
	T158=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=84;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=65;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=78;
	H = H + 1;
	heap[int(H)]=67;
	H = H + 1;
	heap[int(H)]=73;
	H = H + 1;
	heap[int(H)]=65;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T158;
	printString();	fmt.Printf("%c", int(10));
	T159=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T159;
	printString();	fmt.Printf("%c", int(10));
	T160=0.0-1.0; 
	T161=P+4; 
	stack[int(T161)]=T160;
	/* INSTRUCCION WHILE */
	L114:
	/* ACCESO ID */
	T162=stack[int(4)];
	/* ACCESO ID */
	T163=stack[int(4)];
	if T163<5.0 {goto L115;}
	goto L116;
	L115:
	/* ACCESO ID */
	T164=stack[int(4)];
	T165=T164+1.0; 
	stack[int(4)]=T165;
	/* ACCESO ID */
	T166=stack[int(4)];
	/* ACCESO ID */
	T167=stack[int(4)];
	if T167==3.0 {goto L117;}
	goto L118;
	/* INSTRUCCION IF */
	L117:
	T168=H; 
	heap[int(H)]=97;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T168;
	printString();	goto L114;
	goto L119;
	L118:
	/* ACCESO ID */
	T169=stack[int(4)];
	/* ACCESO ID */
	T170=stack[int(4)];
	if T170==4.0 {goto L120;}
	goto L121;
	/* INSTRUCCION IF */
	L120:
	T171=H; 
	heap[int(H)]=98;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T171;
	printString();	fmt.Printf("%c", int(10));
	goto L116;
	goto L122;
	L121:
	L122:
	L119:
	T172=H; 
	heap[int(H)]=69;
	H = H + 1;
	heap[int(H)]=108;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=118;
	H = H + 1;
	heap[int(H)]=97;
	H = H + 1;
	heap[int(H)]=108;
	H = H + 1;
	heap[int(H)]=111;
	H = H + 1;
	heap[int(H)]=114;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=100;
	H = H + 1;
	heap[int(H)]=101;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=97;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=101;
	H = H + 1;
	heap[int(H)]=115;
	H = H + 1;
	heap[int(H)]=58;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T172;
	printString();	/* ACCESO ID */
	T173=stack[int(4)];
	/* PRINT */
	fmt.Printf("%d", int(T173));
	T174=H; 
	heap[int(H)]=44;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T174;
	printString();	goto L114;
	L116:
	T175=H; 
	heap[int(H)]=83;
	H = H + 1;
	heap[int(H)]=101;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=100;
	H = H + 1;
	heap[int(H)]=101;
	H = H + 1;
	heap[int(H)]=98;
	H = H + 1;
	heap[int(H)]=105;
	H = H + 1;
	heap[int(H)]=243;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=105;
	H = H + 1;
	heap[int(H)]=109;
	H = H + 1;
	heap[int(H)]=112;
	H = H + 1;
	heap[int(H)]=114;
	H = H + 1;
	heap[int(H)]=105;
	H = H + 1;
	heap[int(H)]=109;
	H = H + 1;
	heap[int(H)]=105;
	H = H + 1;
	heap[int(H)]=114;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T175;
	printString();	fmt.Printf("%c", int(10));
	T176=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T176;
	printString();	fmt.Printf("%c", int(10));
	T177=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=70;
	H = H + 1;
	heap[int(H)]=79;
	H = H + 1;
	heap[int(H)]=82;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T177;
	printString();	fmt.Printf("%c", int(10));
	T178=H; 
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=61;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	/* PRINT */
	stack[int(0)]=T178;
	printString();	fmt.Printf("%c", int(10));
	T179=P+5; 
	stack[int(T179)]=0.0;
	/* INSTRUCCION FOR */
	T180=0.0; 
	L124:
	if T180<=9.0 {goto L125;}
	goto L126;
	L125:
	T181=H; 
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	T182=P+6; 
	stack[int(T182)]=T181;
	/* ACCESO ID */
	T184=P+5; 
	T183=stack[int(T184)];
	T185=10.0-T183; 
	T186=P+7; 
	stack[int(T186)]=0.0;
	/* INSTRUCCION FOR */
	T187=0.0; 
	L129:
	if T187<=T185 {goto L130;}
	goto L131;
	L130:
	/* ACCESO ID */
	T189=P+6; 
	T188=stack[int(T189)];
	T190=H; 
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	T192=P+9; 
	stack[int(T192)]=T188;
	T193=T192+1; 
	stack[int(T193)]=T190;
	P=P+8;
	concatNative();
	T191=stack[int(P)];
	P=P-8;
	T203=P+6; 
	stack[int(T203)]=T191;
	T187=T187+1; 
	T204=P+7; 
	stack[int(T204)]=T187;
	goto L129;
	L131:
	/* ACCESO ID */
	T206=P+5; 
	T205=stack[int(T206)];
	T207=P+7; 
	stack[int(T207)]=0.0;
	/* INSTRUCCION FOR */
	T208=0.0; 
	L137:
	if T208<=T205 {goto L138;}
	goto L139;
	L138:
	/* ACCESO ID */
	T210=P+6; 
	T209=stack[int(T210)];
	T211=H; 
	heap[int(H)]=42;
	H = H + 1;
	heap[int(H)]=32;
	H = H + 1;
	heap[int(H)]=-1;
	H = H + 1;
	T213=P+9; 
	stack[int(T213)]=T209;
	T214=T213+1; 
	stack[int(T214)]=T211;
	P=P+8;
	concatNative();
	T212=stack[int(P)];
	P=P-8;
	T215=P+6; 
	stack[int(T215)]=T212;
	T208=T208+1; 
	T216=P+7; 
	stack[int(T216)]=T208;
	goto L137;
	L139:
	/* ACCESO ID */
	T218=P+6; 
	T217=stack[int(T218)];
	/* PRINT */
	stack[int(0)]=T217;
	printString();	fmt.Printf("%c", int(10));
	T180=T180+1; 
	T219=P+5; 
	stack[int(T219)]=T180;
	goto L124;
	L126:
}